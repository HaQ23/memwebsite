"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var i={},t=Object.prototype,c=t.hasOwnProperty,l=Object.defineProperty||function(t,e,n){t[e]=n.value},e="function"==typeof Symbol?Symbol:{},o=e.iterator||"@@iterator",n=e.asyncIterator||"@@asyncIterator",s=e.toStringTag||"@@toStringTag";function r(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{r({},"")}catch(t){r=function(t,e,n){return t[e]=n}}function a(t,e,n,o){var s,r,i,a,e=e&&e.prototype instanceof d?e:d,e=Object.create(e.prototype),o=new _(o||[]);return l(e,"_invoke",{value:(s=t,r=n,i=o,a="suspendedStart",function(t,e){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===t)throw e;return k()}for(i.method=t,i.arg=e;;){var n=i.delegate;if(n){n=function t(e,n){var o=n.method,s=e.iterator[o];if(void 0===s)return n.delegate=null,"throw"===o&&e.iterator.return&&(n.method="return",n.arg=void 0,t(e,n),"throw"===n.method)||"return"!==o&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+o+"' method")),m;o=u(s,e.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,m;s=o.arg;return s?s.done?(n[e.resultName]=s.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,m):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}(n,i);if(n){if(n===m)continue;return n}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if("suspendedStart"===a)throw a="completed",i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);a="executing";n=u(s,r,i);if("normal"===n.type){if(a=i.done?"completed":"suspendedYield",n.arg===m)continue;return{value:n.arg,done:i.done}}"throw"===n.type&&(a="completed",i.method="throw",i.arg=n.arg)}})}),e}function u(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}i.wrap=a;var m={};function d(){}function p(){}function h(){}var e={},f=(r(e,o,function(){return this}),Object.getPrototypeOf),f=f&&f(f(S([]))),g=(f&&f!==t&&c.call(f,o)&&(e=f),h.prototype=d.prototype=Object.create(e));function v(t){["next","throw","return"].forEach(function(e){r(t,e,function(t){return this._invoke(e,t)})})}function y(i,a){var e;l(this,"_invoke",{value:function(n,o){function t(){return new a(function(t,e){!function e(t,n,o,s){var r,t=u(i[t],i,n);if("throw"!==t.type)return(n=(r=t.arg).value)&&"object"==_typeof(n)&&c.call(n,"__await")?a.resolve(n.__await).then(function(t){e("next",t,o,s)},function(t){e("throw",t,o,s)}):a.resolve(n).then(function(t){r.value=t,o(r)},function(t){return e("throw",t,o,s)});s(t.arg)}(n,o,t,e)})}return e=e?e.then(t,t):t()}})}function w(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function b(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function _(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function S(e){if(e){var n,t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return n=-1,(t=function t(){for(;++n<e.length;)if(c.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:k}}function k(){return{value:void 0,done:!0}}return l(g,"constructor",{value:p.prototype=h,configurable:!0}),l(h,"constructor",{value:p,configurable:!0}),p.displayName=r(h,s,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,h):(t.__proto__=h,r(t,s,"GeneratorFunction")),t.prototype=Object.create(g),t},i.awrap=function(t){return{__await:t}},v(y.prototype),r(y.prototype,n,function(){return this}),i.AsyncIterator=y,i.async=function(t,e,n,o,s){void 0===s&&(s=Promise);var r=new y(a(t,e,n,o),s);return i.isGeneratorFunction(e)?r:r.next().then(function(t){return t.done?t.value:r.next()})},v(g),r(g,s,"Generator"),r(g,o,function(){return this}),r(g,"toString",function(){return"[object Generator]"}),i.keys=function(t){var e,n=Object(t),o=[];for(e in n)o.push(e);return o.reverse(),function t(){for(;o.length;){var e=o.pop();if(e in n)return t.value=e,t.done=!1,t}return t.done=!0,t}},i.values=S,_.prototype={constructor:_,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(b),!t)for(var e in this)"t"===e.charAt(0)&&c.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var o=this;function t(t,e){return r.type="throw",r.arg=n,o.next=t,e&&(o.method="next",o.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var s=this.tryEntries[e],r=s.completion;if("root"===s.tryLoc)return t("end");if(s.tryLoc<=this.prev){var i=c.call(s,"catchLoc"),a=c.call(s,"finallyLoc");if(i&&a){if(this.prev<s.catchLoc)return t(s.catchLoc,!0);if(this.prev<s.finallyLoc)return t(s.finallyLoc)}else if(i){if(this.prev<s.catchLoc)return t(s.catchLoc,!0)}else{if(!a)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return t(s.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;0<=n;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&c.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var s=o;break}}var r=(s=s&&("break"===t||"continue"===t)&&s.tryLoc<=e&&e<=s.finallyLoc?null:s)?s.completion:{};return r.type=t,r.arg=e,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(r)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),b(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var n,o,s=this.tryEntries[e];if(s.tryLoc===t)return"throw"===(n=s.completion).type&&(o=n.arg,b(s)),o}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:S(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),m}},i}function asyncGeneratorStep(t,e,n,o,s,r,i){try{var a=t[r](i),c=a.value}catch(t){return void n(t)}a.done?e(c):Promise.resolve(c).then(o,s)}function _asyncToGenerator(a){return function(){var t=this,i=arguments;return new Promise(function(e,n){var o=a.apply(t,i);function s(t){asyncGeneratorStep(o,e,n,s,r,"next",t)}function r(t){asyncGeneratorStep(o,e,n,s,r,"throw",t)}s(void 0)})}}var whatItemIsReported,storeIdToSendReport,storeIdMem,storeIdComment,valueOfMems,scrollHeight,maxMems,allAddCommentBtn=document.querySelectorAll(".add-comment"),closeCommentBtn=document.querySelector(".comments .close-btn"),closeReportBtn=document.querySelector(".close-report-btn"),sortBtn=document.querySelector(".sort"),sortList=document.querySelector(".sort-list"),sortListItems=document.querySelectorAll(".sort-list__item"),sortCommentsBtn=document.querySelector(".btn-sort-comments"),sendCommentBtn=document.querySelector(".add-comment-btn"),reportForm=document.getElementById("report-form"),sortCommentBox=document.querySelector(".sort-comments-options"),showResponseCloseBtn=document.querySelectorAll(".showResponse__close-btn"),sortValue="najnowsze",sortCommentsValue="najnowsze",startValueShowMem=0,limit=10,stopGenerate=!1,toggleErrorOnSection=function(t){t.classList.toggle("error"),setTimeout(function(){t.classList.toggle("error")},2e3)};function shareOnFacebook(t){t="https://www.facebook.com/sharer/sharer.php?u="+encodeURIComponent(t);window.open(t,"_blank")}var showResponseAlert=function(t){document.querySelector(".body-shadow").classList.toggle("show"),document.querySelector("body").classList.toggle("no-scroll"),(1===t?document.querySelector(".showResponse__success"):document.querySelector(".showResponse__error")).classList.toggle("show")};function capitalizeFirstLetter(t){return t.charAt(0).toUpperCase()+t.slice(1)}var showSortMemsList=function(){sortList.classList.toggle("active")},toggleShowReport=function(){document.querySelector(".report").classList.toggle("show"),document.querySelector(".body-shadow").classList.toggle("show"),document.querySelector("body").classList.toggle("no-scroll"),document.querySelector(".comments").classList.contains("show")&&showComments()},setValuesToReport=function(t){var e=document.querySelector(".report");toggleShowReport(),e.classList.contains("show")&&(storeIdToSendReport=t.closest(".mem")?(whatItemIsReported="mem",t.closest(".mem").dataset.idMeme):(whatItemIsReported="comment",storeIdComment))};function updateAssessmentStatus(o){var s=new XMLHttpRequest;s.open("GET","./backend/utils/showMems.php?idMeme="+o+"&functionToDo=getCountAssessment",!0),s.onload=function(){var t,e,n;200===s.status&&(t=JSON.parse(s.responseText),!1!==(n=document.querySelector('[data-id-meme="'.concat(o,'"]'))||!1))&&(e=n.querySelector(".dislike-score"),n=n.querySelector(".like-score"),"0"in t&&("rating"in t[0]?e.textContent=t[0].assessment:e.textContent=0),"1"in t)&&("rating"in t[1]?n.textContent=t[1].assessment:n.textContent=0)},s.onerror=function(){console.log("Wystąpił błąd zapytania.")},s.send()}function updateCommentsStatus(n){var o=new XMLHttpRequest;o.open("GET","./backend/utils/showMems.php?idMeme="+n+"&functionToDo=getCountComments",!0),o.onload=function(){var t,e;200===o.status&&(t=JSON.parse(o.responseText),!1!==(e=document.querySelector('[data-id-meme="'.concat(n,'"]'))||!1))&&(e=e.querySelector(".mem__comment-score"),void 0!==t.commentCount?e.textContent=t.commentCount:e.textContent=0)},o.onerror=function(){console.log("Wystąpił błąd zapytania.")},o.send()}function isLoginUser(){var t=new XMLHttpRequest;t.open("GET","./backend/utils/showMems.php?&functionToDo=isLoginUser"),t.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),t.onload=function(){if(200===t.status)return JSON.parse(t.responseText).staus_uzytkownika;console.log("Wystąpił błąd zapytania.")},t.onerror=function(){console.log("Wystąpił błąd zapytania.")},t.send()}function getCountOfMems(){var t=new XMLHttpRequest;t.open("GET","./backend/utils/showMems.php?&functionToDo=getCountMems",!0),t.onload=function(){JSON.parse(t.responseText)},t.onerror=function(){console.log("Wystąpił błąd zapytania.")},t.send()}function setNickofAuthor(t){return null===t?"Pobrane z ...":t.nick}function setSrcOfAuthor(t,e){return""===e?"./account.php?user=".concat(t):e}function updateRatingUI(t,e,n,o){t=document.querySelector('[data-id-meme="'.concat(t,'"]'));null!==t&&(t.querySelector(".like-score").textContent=e,t.querySelector(".dislike-score").textContent=n,(1===o?(t.querySelector(".like-icon").setAttribute("fill","#5ab450"),t.querySelector(".dislike-icon")):(0===o?t.querySelector(".dislike-icon").setAttribute("fill","#f72020"):t.querySelector(".dislike-icon").setAttribute("fill","none"),t.querySelector(".like-icon"))).setAttribute("fill","none"))}function updateRatingCommentUI(t,e,n,o){t=document.querySelector('[data-id-comment="'.concat(t,'"]'));null!==t&&(t.querySelector(".like-score").textContent=e,t.querySelector(".dislike-score").textContent=n,(1===o?(t.querySelector(".like-icon").setAttribute("fill","#5ab450"),t.querySelector(".dislike-icon")):(0===o?t.querySelector(".dislike-icon").setAttribute("fill","#f72020"):t.querySelector(".dislike-icon").setAttribute("fill","none"),t.querySelector(".like-icon"))).setAttribute("fill","none"))}function sendRating(o,t){var s=new XMLHttpRequest;s.open("POST","./backend/utils/showMems.php?&functionToDo=sendRating"),s.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),s.onload=function(){var t,e,n;200===s.status?(t=(n=JSON.parse(s.responseText)).currentRatingLike.assessment,e=n.currentRatingDislike.assessment,n=n.user_rating.user_rating,updateRatingUI(o,parseInt(t),parseInt(e),parseInt(n))):console.log("Wystąpił błąd zapytania.")},s.onerror=function(){console.log("Wystąpił błąd zapytania.")},s.send("idMeme="+encodeURIComponent(o)+"&rating="+encodeURIComponent(t))}function sendCommentRating(o,t){var s=new XMLHttpRequest;s.open("POST","./backend/utils/showMems.php?&functionToDo=sendRatingComment"),s.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),s.onload=function(){var t,e,n;200===s.status?(t=(n=JSON.parse(s.responseText)).currentRatingLike.assessment,e=n.currentRatingDislike.assessment,n=n.user_rating.user_rating,updateRatingCommentUI(o,parseInt(t),parseInt(e),parseInt(n))):console.log("Wystąpił błąd zapytania.")},s.onerror=function(){console.log("Wystąpił błąd zapytania.")},s.send("idComment="+encodeURIComponent(o)+"&rating="+encodeURIComponent(t))}function likeMem(t){null!==t&&sendRating(t,1)}function dislikeMem(t){null!==t&&sendRating(t,0)}function likeComment(t){null!==t&&sendCommentRating(t,1)}function dislikeComment(t){null!==t&&sendCommentRating(t,0)}function getMems(t){return new Promise(function(e,n){var o=new XMLHttpRequest;o.open("GET","./backend/utils/showMems.php?index="+t+"&limit="+limit+"&sort="+sortValue+"&functionToDo=loadMems",!0),o.onload=function(){var t;200===o.status?(t=JSON.parse(o.responseText),e(t)):n(o.status)},o.onerror=function(){n(o.status)},o.send()})}function loadMems(t){return _loadMems.apply(this,arguments)}function _loadMems(){return(_loadMems=_asyncToGenerator(_regeneratorRuntime().mark(function t(e){var s,r,n,i;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,getMems(e);case 3:if(s=t.sent,1===(r=document.querySelector(".mems__container")).childElementCount&&(r.textContent=""),getCountOfMems(),0===s.length)return stopGenerate=!0,t.abrupt("return");t.next=10;break;case 10:n=_regeneratorRuntime().mark(function t(){var e,n,o;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:e=s[i],(n=document.createElement("div")).classList.add("mem"),n.setAttribute("data-id-meme",e.id_meme),o="memes/"+e.imgsource,n.innerHTML="<img\n\t\t\t\t\tsrc=".concat(o,'\n\t\t\t\t\talt="mem"\n\t\t\t\t\tclass="mem__img"\n\t\t\t\t/>\n\t\t\t\t<div class="mem__info">\n\t\t\t\t\t<div class="mem__assessments">\n\t\t\t\t\t\t<div class="mem__assessment">\n\t\t\t\t\t\t\t<span class="mem__assessment-score like-score">0</span>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-label="Polub ten mem"\n\t\t\t\t\t\t\t\tclass="add-assessment like"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg class="icon like-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#5ab450" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-thumbs-up"><path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path></svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="mem__assessment">\n\t\t\t\t\t\t\t<span class="mem__assessment-score dislike-score">0 </span>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-label="Polub ten mem"\n\t\t\t\t\t\t\t\tclass="add-assessment dislike"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg class="icon dislike-icon"xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#f72020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-thumbs-down"><path d="M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path></svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="mem__comment">\n\t\t\t\t\t\t<span class="mem__comment-score"> 0 </span>\n\t\t\t\t\t\t<button aria-label="Polub ten mem" class="add-comment">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc="./dist/assets/icons/message-square.svg"\n\t\t\t\t\t\t\t\talt=""\n\t\t\t\t\t\t\t\tclass="icon"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="box">\n\t\t\t\t\t<a href="').concat(setSrcOfAuthor(e.id_user,e.original_url),'" class="mem__author">\n\t\t\t\t\t\t<div class="profile-box">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc="./dist/assets/icons/user.svg"\n\t\t\t\t\t\t\t\talt=""\n\t\t\t\t\t\t\t\tclass="profile-photo"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span class="user-name">').concat(setNickofAuthor(e.name),'</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="box">\n\t\t\t\t\t<div class="share-mem">\n\t\t\t\t\t<button class ="share-btn share-btn-facebook"><img class="icon"src="./dist/assets/icons/facebookSquare.webp"></button>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<button class="report-mem">Zgłoś mema</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>'),sendRating(e.id_meme,2),updateCommentsStatus(e.id_meme),n.querySelector(".add-comment").addEventListener("click",showComments),n.querySelector(".report-mem").addEventListener("click",function(){setValuesToReport(this)}),n.querySelector(".like").addEventListener("click",function(t){likeMem(parseInt(t.target.closest(".mem").dataset.idMeme))}),n.querySelector(".dislike").addEventListener("click",function(t){dislikeMem(parseInt(t.target.closest(".mem").dataset.idMeme))}),n.querySelector(".share-btn").addEventListener("click",function(){shareOnFacebook("http://mem-hub.pl/".concat(o))}),r.appendChild(n);case 14:case"end":return t.stop()}},t)}),i=0;case 12:if(i<s.length)return t.delegateYield(n(),"t0",14);t.next=17;break;case 14:i++,t.next=12;break;case 17:t.next=22;break;case 19:t.prev=19,t.t1=t.catch(0),console.error("Błąd podczas pobierania memów:",t.t1);case 22:case"end":return t.stop()}},t,null,[[0,19]])}))).apply(this,arguments)}function getTimeAgo(t){var t=new Date-new Date(t),e=Math.ceil(t/6e4),n=Math.floor(t/36e5),t=Math.floor(t/864e5);return 0<t?"".concat(t," dni temu"):0<n?"".concat(n," godzin temu"):"".concat(e," minut temu")}function loadComments(t){var r=new XMLHttpRequest;console.log(r),r.open("GET","./backend/utils/showMems.php?idMeme="+t+"&sort="+sortCommentsValue+"&functionToDo=loadComments",!0),r.onreadystatechange=function(){},r.onload=function(){if(200===r.status){var t=JSON.parse(r.responseText),e=document.querySelector(".comments__content");e.innerHTML="";for(var n=0;n<t.length;n++){var o=t[n],s=document.createElement("div");s.classList.add("comment"),s.setAttribute("data-id-comment",o.id_comment),s.innerHTML='\n\t\t\t\t\t<a href="#" class="profile-box">\n\t\t\t\t\t\t<img src="./dist/assets/icons/user.svg" alt="" class="profile-photo" />\n\t\t\t\t\t</a>\n\t\t\t\t\t<div class="comment__content-box data-id-coment=\''.concat(o.idComment,'\'>\n\t\t\t\t\t\t<div class="comment__content">\n\t\t\t\t\t\t\t<span class="comment__author">').concat(o.name.nick,'</span>\n\t\t\t\t\t\t\t<p class="comment__text">\n\t\t\t\t\t\t\t\t').concat(o.body,'\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="comment__options">\n\t\t\t\t\t\t\t<div class="box">\n\t\t\t\t\t\t\t\t<div class="comment__assessment">\n\t\t\t\t\t\t\t\t\t<button aria-label="Polub ten mem" class="comment__option comment__like like">\n\t\t\t\t\t\t\t\t\t\t<svg class="like-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#5ab450" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-thumbs-up">\n\t\t\t\t\t\t\t\t\t\t\t<path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<span class="comment__assessment-score comment__like-score like-score">0</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="comment__assessment">\n\t\t\t\t\t\t\t\t\t<button aria-label="Polub ten mem" class="comment__option comment__dislike dislike">\n\t\t\t\t\t\t\t\t\t\t<svg class="dislike-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#f72020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-thumbs-down">\n\t\t\t\t\t\t\t\t\t\t\t<path d="M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<span class="comment__assessment-score comment__unlike-score dislike-score">0</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="box">\n\t\t\t\t\t\t\t\t<button class="comment__option comment__report">Zgłoś</button>\n\t\t\t\t\t\t\t\t<span class="comment__date-info">').concat(getTimeAgo(o.adding_date),"</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>"),sendCommentRating(storeIdComment=o.id_comment,2),s.querySelector(".comment__report").addEventListener("click",function(){setValuesToReport(this)}),s.querySelector(".like").addEventListener("click",function(t){likeComment(parseInt(t.target.closest(".comment").dataset.idComment))}),s.querySelector(".dislike").addEventListener("click",function(t){dislikeComment(parseInt(t.target.closest(".comment").dataset.idComment))}),e.appendChild(s)}}},r.onerror=function(){console.log("Wystąpił błąd zapytania.")},r.send()}var showComments=function(t){var e=document.querySelector(".comments");e.classList.toggle("show"),document.querySelector(".body-shadow").classList.toggle("show"),document.querySelector("body").classList.toggle("no-scroll"),e.classList.contains("show")?(storeIdMem=t.target.closest(".mem").dataset.idMeme,e.querySelector(".comments__content").innerHTML='<div class = "loading-spinner"id="loading-spinner-comment"></div>',loadComments(storeIdMem)):e.querySelector(".comments__content").textContent=""},addErrorOnCommentInput=function(t){t.classList.contains("error")?(t.classList.toggle("error"),t.setAttribute("placeholder","Napisz komentarz...")):(t.classList.toggle("error"),t.setAttribute("placeholder","Musisz być zalogowany aby dodać komentarz"))};function sendComment(){var e=document.getElementById("addComment"),n=new XMLHttpRequest;""!==e.value&&(n.open("POST","./backend/utils/showMems.php?&functionToDo=sendComment",!0),n.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),n.onload=function(){var t;200===n.status&&(!0===(t=JSON.parse(n.responseText)).success?(e.value="",loadComments(storeIdMem)):!1===t.success&&(e.value="",addErrorOnCommentInput(e),setTimeout(function(){addErrorOnCommentInput(e)},5e3)))},n.onerror=function(){console.error("Wystąpił błąd podczas wysyłania żądania.")},n.send("comment="+encodeURIComponent(e.value)+"&idMeme="+parseInt(storeIdMem)))}function sendReport(){var e,t,n=document.getElementById("reportInputValue");""!==n.value?((e=new XMLHttpRequest).open("POST","./backend/utils/showMems.php?&functionToDo=sendReport",!0),e.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),e.onload=function(){var t;200===e.status&&(!0===(t=JSON.parse(e.responseText)).success?(n.value="",toggleShowReport(),showResponseAlert(1),setTimeout(function(){document.querySelector(".showResponse__success").classList.contains("show")&&showResponseAlert(1)},1200)):!1===t.success&&(n.value="",toggleShowReport(),showResponseAlert(2),setTimeout(function(){document.querySelector(".showResponse__error").classList.contains("show")&&showResponseAlert(2)},3e3)))},e.onerror=function(){console.error("Wystąpił błąd podczas wysyłania żądania."),alert("Błąd podczas wysyłania zgłoszenia")},e.send("message="+encodeURIComponent(n.value)+"&idItem="+parseInt(storeIdToSendReport)+"&typeOfItem="+whatItemIsReported)):(t=document.querySelector(".report"),toggleErrorOnSection(t))}function checkScrollPosition(){scrollHeight=document.querySelector(".mems__container").scrollHeight;var t=window.innerHeight,e=document.documentElement.scrollTop||document.body.scrollTop;scrollHeight-1e3<=t+e&&loadMems(startValueShowMem+=limit)}function changeSortMemes(){document.querySelector(".mems__container").innerHTML='<div class = "loading-spinner" id="loading-spinner-mem"></div>',loadMems(startValueShowMem=0)}function closeSortList(t){t.target.classList.contains("sort-list__item")&&(sortValue=t.target.dataset.category,showSortMemsList(),sortListItems.forEach(function(t){t.dataset.category==sortValue?t.classList.add("active"):t.classList.contains("active")&&t.classList.toggle("active")}),changeSortMemes())}var storeValueOfSortComments=function(t){showCommentsSortList(t);var e=t.target.closest(".comments"),n=document.querySelector(".btn-sort-name"),o=e.querySelectorAll(".sort-comments-options__btn");t.target.classList.contains("sort-comments-options__btn")?(o.forEach(function(t){t.classList.remove("currentSort")}),t.target.classList.add("currentSort"),sortCommentsValue=t.target.dataset.category,n.innerHTML="".concat(capitalizeFirstLetter(sortCommentsValue)),e.classList.remove("show-sort-value"),e.querySelector(".comments__content").innerHTML='<div class = "loading-spinner"id="loading-spinner-comment"></div>',loadComments(storeIdMem)):t.target.classList.contains("bg-shadow")&&e.classList.remove("show-sort-value")},showCommentsSortList=function(t){t.target.closest(".comments").classList.toggle("show-sort-value")};window.addEventListener("load",function(){loadMems(startValueShowMem)}),window.addEventListener("scroll",function(){stopGenerate||checkScrollPosition()}),closeCommentBtn.addEventListener("click",showComments),sortCommentsBtn.addEventListener("click",showCommentsSortList),closeReportBtn.addEventListener("click",toggleShowReport),sortBtn.addEventListener("click",showSortMemsList),sortList.addEventListener("click",closeSortList),window.addEventListener("beforeunload",function(){window.scrollTo(0,0)}),sendCommentBtn.addEventListener("click",sendComment),reportForm.addEventListener("submit",function(t){t.preventDefault(),sendReport()}),sortCommentBox.addEventListener("click",storeValueOfSortComments),showResponseCloseBtn.forEach(function(t){t.addEventListener("click",function(){t.closest(".showResponse__error")?showResponseAlert(2):showResponseAlert(1)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
